package de.heinerkuecker.constraint.util.coll;

import java.io.Serializable;
import java.util.Collection;
import java.util.HashSet;

/**
 * Diese HashSet-Erweiterung wirft eine Exception,
 * wenn ein vorher vorhandener Eintrag (Entry)
 * durch eine put-Operation verdrängt werden würde
 * (eine etwas andere Implementierung ist notwendig,
 * wenn vor der put-Operation geprüft werden soll).
 * 
 * @author Heiner Kücker
 */
public class NoPreviousValueHashSet<E>
extends HashSet<E>
implements Serializable
{
    /**
     * serial version id generated by eclipse
     */
    private static final long serialVersionUID = 5517689357425047328L;

    /**
     * Constructor.
     */
    public NoPreviousValueHashSet()
    {
        super();
    }

    /**
     * Constructor.
     * @param pInitialCapacity
     * @param pLoadFactor
     */
    public NoPreviousValueHashSet(
            final int pInitialCapacity, 
            final float pLoadFactor)
    {
        super( pInitialCapacity, pLoadFactor );
    }

    /**
     * Constructor.
     * @param pInitialCapacity
     */
    public NoPreviousValueHashSet(
            final int pInitialCapacity)
    {
        super( pInitialCapacity );
    }

    /**
     * Constructor.
     * @param pColl
     */
    public NoPreviousValueHashSet(
            final Collection<? extends E> pColl )
    {
        super( pColl );
    }

    /**
     * Diese HashSet-Erweiterung wirft eine Exception,
     * wenn ein vorher vorhandener Eintrag (Entry)
     * durch eine put-Operation verdrängt werden würde
     * (eine etwas andere Implementierung ist notwendig,
     * wenn vor der put-Operation geprüft werden soll).
     * 
     * @see java.util.HashSet#add(Object)
     * @throws IllegalStateException wenn ein vorheriger Wert verdrängt wurde
     */
    public boolean add(
            final E pE )
    {
        if ( this.contains( pE ) )
        {
            throw new 
            //RuntimeException( 
            IllegalStateException(
                    "previous element suppressed (verdrängt): " + pE );
        }
        return super.add( pE );
    }

}
