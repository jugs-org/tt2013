package _11_transform_safeoperation_int_range.constraints;

import _11_transform_safeoperation_int_range.predicates.*;

/**
 * Constraint class of Integer.
 * <pre>(IntGreater1 or IntEqual1).</pre>
 * Generated by {@link _11_transform_safeoperation_int_range.TransformSafeOperationIntRangeConstraintCodeGenerator}.
 * Line-Number 79.
 */
public final class ORB_IntGreater1_IntEqual1_ORE
{
	/**
	 * Context object of type Integer.
	 */
	public final Integer value;

	/**
	 * Constructor.
	 * 
	 * @param value current context object
	 * @throws IllegalArgumentException if constraint violated
	 */
	public ORB_IntGreater1_IntEqual1_ORE(
			final Integer value )
	{
		if ( ! test( value ) )
		{
			throw new IllegalArgumentException( "constraint violation" );
		}
		this.value = value;
	}

	/**
	 * Test method.
	 * 
	 * @param value current context object
	 * @return constraint expression satisfied or not
	 */
	public static boolean test(
			final Integer value )
	{
		return ( new IntGreater( 1 ).test( value ) ||
					new IntEqual( 1 ).test( value ) );
	}

	/**
	 * Debug output.
	 *
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString()
	{
		return "(IntGreater1 or IntEqual1): " + this.value;
	}

}