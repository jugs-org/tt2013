package _10_transform_safeoperation_str_len.constraints;

import _10_transform_safeoperation_str_len.predicates.*;

/**
 * Constraint class of String.
 * <pre>(StrMinLen10 and StrMaxLen20).</pre>
 * Generated by {@link _10_transform_safeoperation_str_len.TransformSafeOperationStrLenConstraintCodeGenerator}.
 * Line-Number 148.
 */
public final class ANDB_StrMinLen10_StrMaxLen20_ANDE
{
	/**
	 * Context object of type String.
	 */
	public final String str;

	/**
	 * Constructor.
	 * 
	 * @param str current context object
	 * @throws IllegalArgumentException if constraint violated
	 */
	public ANDB_StrMinLen10_StrMaxLen20_ANDE(
			final String str )
	{
		if ( ! test( str ) )
		{
			throw new IllegalArgumentException( "constraint violation" );
		}
		this.str = str;
	}

	/**
	 * Test method.
	 * 
	 * @param str current context object
	 * @return constraint expression satisfied or not
	 */
	public static boolean test(
			final String str )
	{
		return ( new StrMinLen( 10 ).test( str ) &&
					new StrMaxLen( 20 ).test( str ) );
	}

	/**
	 * Convert this constraint type to a compatible type of this type.
	 * <pre>StrMinLen10.</pre>
	 * 
	 * @return compatible type of this type
	 */
	public StrMinLen10 convertToStrMinLen10()
	{
		return new StrMinLen10(
				this.str );
	}

	/**
	 * Convert this constraint type to a compatible type of this type.
	 * <pre>StrIsNotNull.</pre>
	 * 
	 * @return compatible type of this type
	 */
	public StrIsNotNullConstraint convertToStrIsNotNullConstraint()
	{
		return new StrIsNotNullConstraint(
				this.str );
	}

	/**
	 * Convert this constraint type to a compatible type of this type.
	 * <pre>StrMinLen1.</pre>
	 * 
	 * @return compatible type of this type
	 */
	public StrMinLen1 convertToStrMinLen1()
	{
		return new StrMinLen1(
				this.str );
	}

	/**
	 * Convert this constraint type to a compatible type of this type.
	 * <pre>(StrMinLen10 and StrMaxLen32).</pre>
	 * 
	 * @return compatible type of this type
	 */
	public ANDB_StrMinLen10_StrMaxLen32_ANDE convertToANDB_StrMinLen10_StrMaxLen32_ANDE()
	{
		return new ANDB_StrMinLen10_StrMaxLen32_ANDE(
				this.str );
	}

	/**
	 * Convert this constraint type to a compatible type of this type.
	 * <pre>StrMaxLen20.</pre>
	 * 
	 * @return compatible type of this type
	 */
	public StrMaxLen20 convertToStrMaxLen20()
	{
		return new StrMaxLen20(
				this.str );
	}

	/**
	 * Sichere String-Add-Operation.
	 *
	 * @param strConstraintToAdd auf maximale Länge constraint-gesicherter zu addierender String
	 * @return constraint-gesicherter String
	 */
	public ANDB_StrMinLen10_StrMaxLen32_ANDE addStrMaxLen12(
			final StrMaxLen12 strConstraintToAdd )
	{
		return new ANDB_StrMinLen10_StrMaxLen32_ANDE( str.concat( strConstraintToAdd.str ) );
	}

	/**
	 * Sichere String-Add-Operation.
	 *
	 * @param strConstraintToAdd auf minimale Länge constraint-gesicherter zu addierender String
	 * @return constraint-gesicherter String
	 */
	public StrMinLen23 addStrMinLen13(
			final StrMinLen13 strConstraintToAdd )
	{
		return new StrMinLen23( str.concat( strConstraintToAdd.str ) );
	}

	/**
	 * Sichere String-Add-Operation.
	 *
	 * @param strConstraintToAdd auf minimale Länge constraint-gesicherter zu addierender String
	 * @return constraint-gesicherter String
	 */
	public ANDB_StrMinLen25_StrMaxLen37_ANDE addStrMin15Max17Len(
			final ANDB_StrMinLen15_StrMaxLen17_ANDE strConstraintToAdd )
	{
		return new ANDB_StrMinLen25_StrMaxLen37_ANDE( str.concat( strConstraintToAdd.str ) );
	}

	/**
	 * Debug output.
	 *
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString()
	{
		return "(StrMinLen10 and StrMaxLen20): " + this.str;
	}

}