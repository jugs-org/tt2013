package _06_switch_fizzbuzz.constraints;

import _06_switch_fizzbuzz.predicates.*;

/**
 * Constraint class of Integer.
 * <pre>(Fizz and Buzz).</pre>
 * Generated by {@link _06_switch_fizzbuzz.FizzBuzzConstraintCodeGenerator}.
 * Line-Number 145.
 */
public final class ANDB_Fizz_Buzz_ANDE
{
	/**
	 * Context object of type Integer.
	 */
	public final Integer value;

	/**
	 * Constructor.
	 * 
	 * @param value current context object
	 * @throws IllegalArgumentException if constraint violated
	 */
	public ANDB_Fizz_Buzz_ANDE(
			final Integer value )
	{
		if ( ! test( value ) )
		{
			throw new IllegalArgumentException( "constraint violation" );
		}
		this.value = value;
	}

	/**
	 * Test method.
	 * 
	 * @param value current context object
	 * @return constraint expression satisfied or not
	 */
	public static boolean test(
			final Integer value )
	{
		return ( new Fizz().test( value ) &&
					new Buzz().test( value ) );
	}

	/**
	 * Convert this constraint type to a compatible type of this type.
	 * <pre>(Fizz or not(Fizz) or Buzz or not(Buzz)).</pre>
	 * 
	 * @return compatible type of this type
	 */
	public ORB_Fizz_NOT_Fizz_Buzz_NOT_Buzz_ORE convertToORB_Fizz_NOT_Fizz_Buzz_NOT_Buzz_ORE()
	{
		return new ORB_Fizz_NOT_Fizz_Buzz_NOT_Buzz_ORE(
				this.value );
	}

	/**
	 * Debug output.
	 *
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString()
	{
		return "(Fizz and Buzz): " + this.value;	}

}